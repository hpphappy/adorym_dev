from ptychography import reconstruct_ptychography
import numpy as np
import dxchange
import argparse

parser = argparse.ArgumentParser()
parser.add_argument("--iter", help="iteration",default=0)
args = parser.parse_args()
i_iter = int(args.iter)

folder_name = 'test_1'

if i_iter > 0:
    init_delta = dxchange.read_tiff('cone_256_foam_4pi_ptycho/{}/iter_{}/delta_ds_1.tiff'.format(folder_name, i_iter - 1))
    init_beta = dxchange.read_tiff('cone_256_foam_4pi_ptycho/{}/iter_{}/beta_ds_1.tiff'.format(folder_name, i_iter - 1))
    init = [init_delta, init_beta]
else:
    init = None

#init_delta = dxchange.read_tiff('cone_256_filled_ptycho/n2e5/xrmlite_iter2/delta_ds_1.tiff')
#init_beta = dxchange.read_tiff('cone_256_filled_ptycho/n2e5/xrmlite_iter2/beta_ds_1.tiff')
#init = [init_delta, init_beta]

params_adhesin = {'fname': 'data_adhesin_64_1nm_1um.h5',
                  'theta_st': 0,
                  'theta_end': 2 * np.pi,
                  'theta_downsample': None,
                  'n_epochs': 5,
                  'obj_size': (64, 64, 64),
                  'alpha_d': 1e-9,
                  'alpha_b': 1e-10,
                  'gamma': 0,
                  'probe_size': (18, 18),
                  'learning_rate': 1e-7,
                  'center': 32,
                  'energy_ev': 800,
                  'psize_cm': 0.67e-7,
                  'batch_size': 1,
                  'n_batch_per_update': 1,
                  'output_folder': 'test',
                  'cpu_only': True,
                  'save_folder': 'adhesin_ptycho',
                  'phantom_path': 'adhesin_ptycho/phantom',
                  'multiscale_level': 1,
                  'n_epoch_final_pass': None,
                  'save_intermediate': True,
                  'full_intermediate': True,
                  'initial_guess': None,
                  'n_dp_batch': 50,
                  'probe_type': 'gaussian',
                  'finite_support_mask': None,
                  'forward_algorithm': 'fresnel',
                  'object_type': 'normal',
                  'probe_pos': [(y, x) for y in np.linspace(9, 55, 23, dtype=int) for x in np.linspace(9, 55, 23, dtype=int)],
                  'probe_circ_mask': None,
                  'probe_mag_sigma': 10,
                  'probe_phase_sigma': 10,
                  'probe_phase_max': 0.5,
                  }

params_cone_marc = {'fname': 'data_cone_256_1nm_marc.h5',
                    'theta_st': 0,
                    'theta_end': 2 * np.pi,
                    'theta_downsample': 5,
                    'n_epochs': 5,
                    'obj_size': (256, 256, 256),
                    'alpha_d': 1e-9,
                    'alpha_b': 1e-10,
                    'gamma': 1e-9,
                    'probe_size': (72, 72),
                    'learning_rate': 1e-7,
                    'center': 128,
                    'energy_ev': 5000,
                    'psize_cm': 1.e-7,
                    'batch_size': 1,
                    'n_batch_per_update': 1,
                    'output_folder': 'test',
                    'cpu_only': True,
                    'save_path': 'cone_256_filled_ptycho',
                    'phantom_path': 'cone_256_filled_ptycho/phantom',
                    'multiscale_level': 1,
                    'n_epoch_final_pass': None,
                    'save_intermediate': True,
                    'full_intermediate': True,
                    'initial_guess': None,
                    'n_dp_batch': 20,
                    'probe_type': 'gaussian',
                    'forward_algorithm': 'fresnel',
                    'probe_pos': [(y, x) for y in np.arange(23) * 12 for x in np.arange(23) * 12],
                    'finite_support_mask': None,
                    'probe_circ_mask': None,
                    'probe_mag_sigma': 6,
                    'probe_phase_sigma': 6,
                    'probe_phase_max': 0.5,
                    }

params_cone_4pi = {'fname': 'data_cone_256_foam_1nm.h5',
                    'theta_st': 0,
                    'theta_end': 2 * np.pi,
                    'theta_downsample': None,
                    'n_epochs': 1,
                    'obj_size': (256, 256, 256),
                    'alpha_d': 1e-9,
                    'alpha_b': 1e-10,
                    'gamma': 1e-9,
                    'probe_size': (72, 72),
                    'learning_rate': 1e-5,
                    'center': 128,
                    'energy_ev': 500,
                    'psize_cm': 100.e-7,
                    'minibatch_size': 1,
                    'n_batch_per_update': 1,
                    'output_folder': '{}/iter_{}'.format(folder_name, i_iter),
                    'cpu_only': True,
                    'save_path': 'cone_256_foam_4pi_ptycho',
                    'phantom_path': 'cone_256_foam_4pi_ptycho/phantom',
                    'multiscale_level': 1,
                    'n_epoch_final_pass': None,
                    'object_type': 'phase_only',
                    'save_intermediate': True,
                    'full_intermediate': True,
                    'initial_guess': init,
                    'n_dp_batch': 20,
                    'probe_type': 'gaussian',
                    'probe_circ_mask': None,
                    'forward_algorithm': 'fresnel',
                    'probe_pos': [(y, x) for y in np.arange(23) * 12 for x in np.arange(23) * 12],
                    'finite_support_mask': None,
                    'probe_mag_sigma': 6,
                    'probe_phase_sigma': 6,
                    'probe_phase_max': 0.5
                    }

params_2d = {'fname': 'data_cone_256_1nm_marc.h5',
                    'theta_st': 0,
                    'theta_end': 0,
                    'theta_downsample': 1,
                    'n_epochs': 500,
                    'obj_size': (256, 256, 1),
                    'alpha_d': 0,
                    'alpha_b': 0,
                    'gamma': 5e-11,
                    'probe_size': (72, 72),
                    'learning_rate': 1e-6,
                    'center': 128,
                    'energy_ev': 5000,
                    'psize_cm': 1.e-7,
                    'batch_size': 1,
                    'n_batch_per_update': 1,
                    'output_folder': 'ptycho/test',
                    'cpu_only': True,
                    'save_folder': '2d',
                    'phantom_path': '2d/phantom',
                    'multiscale_level': 1,
                    'n_epoch_final_pass': None,
                    'save_intermediate': True,
                    'full_intermediate': True,
                    'initial_guess': None,
                    'n_dp_batch': 20,
                    'probe_type': 'gaussian',
                    'forward_algorithm': 'fresnel',
                    'probe_pos': [(y, x) for y in np.arange(23) * 12 for x in np.arange(23) * 12],
                    'finite_support_mask': None,
                    'object_type': 'normal',
                     'probe_circ_mask': None,
                     'probe_mag_sigma': 6,
                     'probe_phase_sigma': 6,
                     'probe_phase_max': 0.5,
                    }

params_2d_cell = {'fname': 'data_cell_phase_n1e9_ref.h5',
                    'theta_st': 0,
                    'theta_end': 0,
                    'theta_downsample': 1,
                    'n_epochs': 200,
                    'obj_size': (325, 325, 1),
                    'alpha_d': 0,
                    'alpha_b': 0,
                    'gamma': 0,
                    'probe_size': (72, 72),
                    'learning_rate': 4e-3,
                    'center': 512,
                    'energy_ev': 5000,
                    'psize_cm': 1.e-7,
                    'batch_size': 1,
                    'n_batch_per_update': 1,
                    'output_folder': 'n1e9_ref',
                    'cpu_only': True,
                    'save_folder': 'cell/ptychography',
                    'phantom_path': 'cell/phantom',
                    'multiscale_level': 1,
                    'n_epoch_final_pass': None,
                    'save_intermediate': True,
                    'full_intermediate': True,
                    # 'initial_guess': [np.zeros([325, 325, 1]) + 0.032, np.zeros([325, 325, 1])],
                    'initial_guess': None,
                    'n_dp_batch': 20,
                    'probe_type': 'gaussian',
                    'forward_algorithm': 'fresnel',
                    'object_type': 'phase_only',
                    'probe_pos': [(y, x) for y in np.arange(33) * 10 for x in np.arange(34) * 10],
                    'finite_support_mask': None,
                  'probe_circ_mask': None,
                  'probe_mag_sigma': 6,
                  'probe_phase_sigma': 6,
                  'probe_phase_max': 0.5,
                    }

params_cone_marc_noisy = {'fname': 'data_cone_256_1nm_marc_n2e5.h5',
                          'theta_st': 0,
                          'theta_end': 2 * np.pi,
                          'theta_downsample': None,
                          'n_epochs': 1,
                          'obj_size': (256, 256, 256),
                          'alpha_d': 1e-9,
                          'alpha_b': 1e-10,
                          'gamma': 1e-9,
                          'probe_size': (72, 72),
                          'learning_rate': 1e-7,
                          'center': 128,
                          'energy_ev': 5000,
                          'psize_cm': 1.e-7,
                          'batch_size': 1,
                          'n_batch_per_update': 1,
                          'output_folder': 'n2e5/xrmlite_iter3',
                          'cpu_only': True,
                          'save_folder': 'cone_256_filled_ptycho',
                          'phantom_path': 'cone_256_filled_ptycho/phantom',
                          'multiscale_level': 1,
                          'n_epoch_final_pass': None,
                          'save_intermediate': True,
                          'full_intermediate': True,
                          'initial_guess': init,
                          'n_dp_batch': 20,
                          'probe_type': 'gaussian',
                          'forward_algorithm': 'fresnel',
                          'probe_pos': [(y, x) for y in np.arange(23) * 12 for x in np.arange(23) * 12],
                          'finite_support_mask': None,
                          'probe_circ_mask': None,
                          'probe_mag_sigma': 6,
                          'probe_phase_sigma': 6,
                          'probe_phase_max': 0.5,
                          }

params_cone = {'fname': 'data_cone_256_1nm_marc.h5',
               'theta_st': 0,
               'theta_end': 2 * np.pi,
               'n_epochs': 1,
               'obj_size': (256, 256, 256),
               'alpha_d': 0,
               'alpha_b': 0,
               'gamma': 0,
               'probe_size': (72, 72),
               'learning_rate': 1e-7,
               'center': 128,
               'energy_ev': 5000,
               'psize_cm': 1.e-7,
               'batch_size': 1,
               'n_batch_per_update': 1,
               'output_folder': 'test',
               'cpu_only': True,
               'save_folder': 'cone_256_filled_ptycho',
               'phantom_path': 'cone_256_filled_ptycho/phantom',
               'multiscale_level': 1,
               'n_epoch_final_pass': None,
               'save_intermediate': True,
               'full_intermediate': True,
               'initial_guess': None,
               'n_dp_batch': 100,
               'probe_type': 'gaussian',
               'forward_algorithm': 'fd',
               # 'probe_pos': [(y, x) for y in np.linspace(18, 120, 35, dtype=int) for x in np.linspace(54, 198, 49, dtype=int)] +
               #              [(y, x) for y in np.linspace(120, 222, 35, dtype=int) for x in np.linspace(22, 230, 70, dtype=int)],
               'probe_pos': [(y, x) for y in np.arange(23) * 12 for x in np.arange(23) * 12],
               'finite_support_mask': dxchange.read_tiff('cone_256_filled_ptycho/mask.tiff'),
               'probe_circ_mask': None,
               'probe_mag_sigma': 6,
               'probe_phase_sigma': 6,
               'probe_phase_max': 0.5,
               }

# params = params_adhesin
params = params_cone_4pi


reconstruct_ptychography(**params)